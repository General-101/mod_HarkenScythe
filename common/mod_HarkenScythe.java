package mod_HarkenScythe.common;

import cpw.mods.fml.client.registry.RenderingRegistry;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.PreInit;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.EntityRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;
import cpw.mods.fml.common.registry.VillagerRegistry;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.EntityEggInfo;
import net.minecraft.entity.EntityList;
import net.minecraft.entity.EnumCreatureType;
import net.minecraft.item.EnumArmorMaterial;
import net.minecraft.item.EnumToolMaterial;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.stats.Achievement;
import net.minecraft.util.WeightedRandomChestContent;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraftforge.common.AchievementPage;
import net.minecraftforge.common.ChestGenHooks;
import net.minecraftforge.common.Configuration;
import net.minecraftforge.common.EnumHelper;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.oredict.OreDictionary;

@Mod(
    modid = "HarkenScythe_Core",
    name = "HarkenScythe",
    version = "2.1.6"
)
@NetworkMod(
    clientSideRequired = true,
    serverSideRequired = false,
    channels = {"HSPacket"},
    packetHandler = CommonPacketHandlerHarkenScythe.class
)
public class mod_HarkenScythe
{
    @Mod.Instance("HarkenScythe_Core")
    public static mod_HarkenScythe instance = new mod_HarkenScythe();
    public static int ItemHSScytheWoodID;
    public static int ItemHSScytheStoneID;
    public static int ItemHSScytheIronID;
    public static int ItemHSScytheDiamondID;
    public static int ItemHSScytheGoldID;
    public static int ItemHSScytheLivingmetalID;
    public static int ItemHSScytheBiomassID;
    public static int ItemHSScytheSoulReaperID;
    public static int ItemHSGlaiveWoodID;
    public static int ItemHSGlaiveStoneID;
    public static int ItemHSGlaiveIronID;
    public static int ItemHSGlaiveDiamondID;
    public static int ItemHSGlaiveGoldID;
    public static int ItemHSGlaiveLivingmetalID;
    public static int ItemHSGlaiveBiomassID;
    public static int ItemHSEssenceKeeperID;
    public static int ItemHSSoulkeeperID;
    public static int ItemHSBloodkeeperID;
    public static int ItemHSEssenceVesselID;
    public static int ItemHSSoulVesselID;
    public static int ItemHSBloodVesselID;
    public static int ItemHSBookShadowID;
    public static int ItemHSBookCarnageID;
    public static int ItemHSBookNecronomiconID;
    public static int ItemHSNecronomiconPageID;
    public static int ItemHSCrucibleSoulID;
    public static int ItemHSCrucibleBloodID;
    public static int ItemHSSkullID;
    public static int ItemHSTalismanID;
    public static int ItemHSTalismanEtherealID;
    public static int ItemHSAmuletOverworldID;
    public static int ItemHSAmuletNetherID;
    public static int ItemHSAmuletEtherealID;
    public static int ItemHSIngotLivingmetalID;
    public static int ItemHSBiomassID;
    public static int ItemHSEctoplasmID;
    public static int ItemHSAbyssFragmentID;
    public static int ItemHSDyeSpectralID;
    public static int ItemHSCreepBallID;
    public static int ItemHSBiomassSeedID;
    public static int ItemHSBiomassSeedGerminatedID;
    public static int ItemHSSwordLivingmetalID;
    public static int ItemHSSpadeLivingmetalID;
    public static int ItemHSPickaxeLivingmetalID;
    public static int ItemHSAxeLivingmetalID;
    public static int ItemHSHoeLivingmetalID;
    public static int ItemHSSwordBiomassID;
    public static int ItemHSSpadeBiomassID;
    public static int ItemHSPickaxeBiomassID;
    public static int ItemHSAxeBiomassID;
    public static int ItemHSHoeBiomassID;
    public static int ItemHSHelmetSoulweaveID;
    public static int ItemHSPlateSoulweaveID;
    public static int ItemHSLegsSoulweaveID;
    public static int ItemHSBootsSoulweaveID;
    public static int ItemHSHelmetBloodweaveID;
    public static int ItemHSPlateBloodweaveID;
    public static int ItemHSLegsBloodweaveID;
    public static int ItemHSBootsBloodweaveID;
    public static int ItemHSHelmetLivingmetalID;
    public static int ItemHSPlateLivingmetalID;
    public static int ItemHSLegsLivingmetalID;
    public static int ItemHSBootsLivingmetalID;
    public static int ItemHSHelmetBiomassID;
    public static int ItemHSPlateBiomassID;
    public static int ItemHSLegsBiomassID;
    public static int ItemHSBootsBiomassID;
    public static int ItemHSHelmetSpectralLeatherID;
    public static int ItemHSPlateSpectralLeatherID;
    public static int ItemHSLegsSpectralLeatherID;
    public static int ItemHSBootsSpectralLeatherID;
    public static int ItemHSHelmetSpectralSoulweaveID;
    public static int ItemHSPlateSpectralSoulweaveID;
    public static int ItemHSLegsSpectralSoulweaveID;
    public static int ItemHSBootsSpectralSoulweaveID;
    public static int ItemHSHelmetSpectralBloodweaveID;
    public static int ItemHSPlateSpectralBloodweaveID;
    public static int ItemHSLegsSpectralBloodweaveID;
    public static int ItemHSBootsSpectralBloodweaveID;
    public static int ItemHSLunarDialID;
    public static int BlockHSSoulAltarID;
    public static int BlockHSBloodAltarID;
    public static int BlockHSSoulCrucibleID;
    public static int BlockHSBloodCrucibleID;
    public static int BlockHSSoulLightID;
    public static int BlockHSSplashBloodID;
    public static int BlockHSSkullID;
    public static int BlockHSSoulweaveClothBlockID;
    public static int BlockHSBloodweaveClothBlockID;
    public static int BlockHSLivingmetalBlockID;
    public static int BlockHSBiomassBlockID;
    public static int BlockHSCreepBlockID;
    public static int BlockHSBiomassPlantID;
    public static int BlockHSSpectralClothBlockID;
    public static int AugmentHSSoulAttunedID;
    public static int AugmentHSBloodAttunedID;
    public static int AugmentHSSoulstealID;
    public static int AugmentHSBloodlettingID;
    public static int AugmentHSBlightID;
    public static int AugmentHSHemorrhageID;
    public static int AugmentHSVitalityID;
    public static int AugmentHSExudeID;
    public static int AugmentHSAfterlifeID;
    public static int AugmentHSDecapitateID;
    public static int AugmentHSWardID;
    public static int AugmentHSSanguinaryID;
    public static int HUDDrinkGaugeYOverrideID;
    public static int HSCrucibleRenderID = RenderingRegistry.getNextAvailableRenderId();
    public static int HSLivingmetalRepairTimer = 150;
    public static Item HSScytheWood;
    public static Item HSScytheStone;
    public static Item HSScytheIron;
    public static Item HSScytheDiamond;
    public static Item HSScytheGold;
    public static Item HSScytheLivingmetal;
    public static Item HSScytheBiomass;
    public static Item HSScytheSoulReaper;
    public static Item HSGlaiveWood;
    public static Item HSGlaiveStone;
    public static Item HSGlaiveIron;
    public static Item HSGlaiveDiamond;
    public static Item HSGlaiveGold;
    public static Item HSGlaiveLivingmetal;
    public static Item HSGlaiveBiomass;
    public static Item HSEssenceKeeper;
    public static Item HSSoulkeeper;
    public static Item HSBloodkeeper;
    public static Item HSEssenceVessel;
    public static Item HSSoulVessel;
    public static Item HSBloodVessel;
    public static Item HSBookShadow;
    public static Item HSBookCarnage;
    public static Item HSBookNecronomicon;
    public static Item HSNecronomiconPage;
    public static Item HSSkull;
    public static Item HSTalisman;
    public static Item HSTalismanEthereal;
    public static Item HSAmuletOverworld;
    public static Item HSAmuletNether;
    public static Item HSAmuletEthereal;
    public static Item HSIngotLivingmetal;
    public static Item HSBiomass;
    public static Item HSEctoplasm;
    public static Item HSAbyssFragment;
    public static Item HSDyeSpectral;
    public static Item HSCreepBall;
    public static Item HSBiomassSeed;
    public static Item HSBiomassSeedGerminated;
    public static Item HSSwordLivingmetal;
    public static Item HSSpadeLivingmetal;
    public static Item HSPickaxeLivingmetal;
    public static Item HSAxeLivingmetal;
    public static Item HSHoeLivingmetal;
    public static Item HSSwordBiomass;
    public static Item HSSpadeBiomass;
    public static Item HSPickaxeBiomass;
    public static Item HSAxeBiomass;
    public static Item HSHoeBiomass;
    public static Item HSHelmetSoulweave;
    public static Item HSPlateSoulweave;
    public static Item HSLegsSoulweave;
    public static Item HSBootsSoulweave;
    public static Item HSHelmetBloodweave;
    public static Item HSPlateBloodweave;
    public static Item HSLegsBloodweave;
    public static Item HSBootsBloodweave;
    public static Item HSHelmetLivingmetal;
    public static Item HSPlateLivingmetal;
    public static Item HSLegsLivingmetal;
    public static Item HSBootsLivingmetal;
    public static Item HSHelmetBiomass;
    public static Item HSPlateBiomass;
    public static Item HSLegsBiomass;
    public static Item HSBootsBiomass;
    public static Item HSHelmetSpectralLeather;
    public static Item HSPlateSpectralLeather;
    public static Item HSLegsSpectralLeather;
    public static Item HSBootsSpectralLeather;
    public static Item HSHelmetSpectralSoulweave;
    public static Item HSPlateSpectralSoulweave;
    public static Item HSLegsSpectralSoulweave;
    public static Item HSBootsSpectralSoulweave;
    public static Item HSHelmetSpectralBloodweave;
    public static Item HSPlateSpectralBloodweave;
    public static Item HSLegsSpectralBloodweave;
    public static Item HSBootsSpectralBloodweave;
    public static Item HSLunarDial;
    public static Block HSSoulAltar;
    public static Block HSBloodAltar;
    public static Block HSSoulCrucible;
    public static Block HSBloodCrucible;
    public static Block HSSoulLight;
    public static Block HSSplashBloodBlock;
    public static Block HSSkullBlock;
    public static Block HSSoulweaveClothBlock;
    public static Block HSBloodweaveClothBlock;
    public static Block HSLivingmetalBlock;
    public static Block HSBiomassBlock;
    public static Block HSCreepBlock;
    public static Block HSBiomassPlant;
    public static Block HSSpectralClothBlock;
    public static Item HSCrucibleSoul;
    public static Item HSCrucibleBlood;
    public static Enchantment HSSoulAttunedAug;
    public static Enchantment HSBloodAttunedAug;
    public static Enchantment HSSoulstealAug;
    public static Enchantment HSBloodlettingAug;
    public static Enchantment HSBlightAug;
    public static Enchantment HSHemorrhageAug;
    public static Enchantment HSVitalityAug;
    public static Enchantment HSExudeAug;
    public static Enchantment HSAfterlifeAug;
    public static Enchantment HSDecapitateAug;
    public static Enchantment HSWardAug;
    public static Enchantment HSSanguinaryAug;
    public static AchievementPage TutorialPage;
    public static Achievement Tutorial;
    public static Achievement TutorialSecond;
    public static WeightedRandomChestContent necroPage;
    @SidedProxy(
        clientSide = "mod_HarkenScythe.client.ClientProxyHarkenScythe",
        serverSide = "mod_HarkenScythe.common.CommonProxyHarkenScythe"
    )
    public static CommonProxyHarkenScythe proxy;
    private GuiHandler guiHandler = new GuiHandler();
    static int startEntityId = 300;

    @Mod.PreInit
    public void preInit(FMLPreInitializationEvent var1)
    {
        Configuration var2 = new Configuration(var1.getSuggestedConfigurationFile());
        var2.load();
        ItemHSScytheWoodID = var2.get("Soul System", "Scythe- Wooden Scythe", 24600).getInt();
        ItemHSScytheStoneID = var2.get("Soul System", "Scythe- Stone Scythe", 24601).getInt();
        ItemHSScytheIronID = var2.get("Soul System", "Scythe- Iron Scythe", 24602).getInt();
        ItemHSScytheDiamondID = var2.get("Soul System", "Scythe- Diamond Scythe", 24603).getInt();
        ItemHSScytheGoldID = var2.get("Soul System", "Scythe- Golden Scythe", 24604).getInt();
        ItemHSScytheLivingmetalID = var2.get("Soul System", "Scythe- Livingmetal Scythe", 24605).getInt();
        ItemHSScytheBiomassID = var2.get("Soul System", "Scythe- Biomass Scythe", 24606).getInt();
        ItemHSScytheSoulReaperID = var2.get("Soul System", "Scythe- Soul Reaper", 24609).getInt();
        ItemHSGlaiveWoodID = var2.get("Blood System", "Glaive- Wooden Glaive", 24610).getInt();
        ItemHSGlaiveStoneID = var2.get("Blood System", "Glaive- Stone Glaive", 24611).getInt();
        ItemHSGlaiveIronID = var2.get("Blood System", "Glaive- Iron Glaive", 24612).getInt();
        ItemHSGlaiveDiamondID = var2.get("Blood System", "Glaive- Diamond Glaive", 24613).getInt();
        ItemHSGlaiveGoldID = var2.get("Blood System", "Glaive- Golden Glaive", 24614).getInt();
        ItemHSGlaiveLivingmetalID = var2.get("Blood System", "Glaive- Livingmetal Glaive", 24615).getInt();
        ItemHSGlaiveBiomassID = var2.get("Blood System", "Glaive- Biomass Glaive", 24616).getInt();
        ItemHSEssenceKeeperID = var2.get("General", "Keeper- Essence Keeper", 24620).getInt();
        ItemHSSoulkeeperID = var2.get("Soul System", "Keeper- Soulkeeper", 24621).getInt();
        ItemHSBloodkeeperID = var2.get("Blood System", "Keeper- Bloodkeeper", 24622).getInt();
        ItemHSEssenceVesselID = var2.get("General", "Keeper- Essence Vessel", 24623).getInt();
        ItemHSSoulVesselID = var2.get("Soul System", "Keeper- Soul Vessel", 24624).getInt();
        ItemHSBloodVesselID = var2.get("Blood System", "Keeper- Blood Vessel", 24625).getInt();
        ItemHSBookShadowID = var2.get("Soul System", "Book- Book of Shadows", 24626).getInt();
        ItemHSBookCarnageID = var2.get("Blood System", "Book- Bood of Carnage", 24627).getInt();
        ItemHSBookNecronomiconID = var2.get("General", "Book- Necronomicon", 24628).getInt();
        ItemHSNecronomiconPageID = var2.get("General", "Book- Necronomicon Page", 24629).getInt();
        ItemHSSkullID = var2.get("General", "Skull- Skull", 24632).getInt();
        ItemHSTalismanID = var2.get("General", "Talisman- Talisman", 24633).getInt();
        ItemHSTalismanEtherealID = var2.get("General", "Talisman- Ethereal Talisman", 24634).getInt();
        ItemHSAmuletOverworldID = var2.get("General", "Amulet- Overworld Amulet", 24635).getInt();
        ItemHSAmuletNetherID = var2.get("General", "Amulet- Nether Amulet", 24636).getInt();
        ItemHSAmuletEtherealID = var2.get("General", "Amulet- Ethereal Amulet", 24637).getInt();
        ItemHSIngotLivingmetalID = var2.get("Soul System", "Material- Livingmetal Ingot", 24638).getInt();
        ItemHSBiomassID = var2.get("Blood System", "Material- Biomass", 24639).getInt();
        ItemHSEctoplasmID = var2.get("General", "Material- Ectoplasm", 24641).getInt();
        ItemHSAbyssFragmentID = var2.get("General", "Fragment- Ender Fragment", 24707).getInt();
        ItemHSDyeSpectralID = var2.get("General", "Dye- Spectral Dye", 24642).getInt();
        ItemHSCreepBallID = var2.get("Blood System", "Material- Creep Ball", 24643).getInt();
        ItemHSBiomassSeedID = var2.get("Blood System", "Material- Biomass Seed", 24644).getInt();
        ItemHSBiomassSeedGerminatedID = var2.get("Blood System", "Material- Germinated Biomass Seed", 24645).getInt();
        ItemHSSwordLivingmetalID = var2.get("Soul System", "Equipment- Livingmetal Sword", 24650).getInt();
        ItemHSSpadeLivingmetalID = var2.get("Soul System", "Equipment- Livingmetal Shovel", 24651).getInt();
        ItemHSPickaxeLivingmetalID = var2.get("Soul System", "Equipment- Livingmetal Pickaxe", 24652).getInt();
        ItemHSAxeLivingmetalID = var2.get("Soul System", "Equipment- Livingmetal Axe", 24653).getInt();
        ItemHSHoeLivingmetalID = var2.get("Soul System", "Equipment- Livingmetal Hoe", 24654).getInt();
        ItemHSSwordBiomassID = var2.get("Blood System", "Equipment- Biomass Sword", 24655).getInt();
        ItemHSSpadeBiomassID = var2.get("Blood System", "Equipment- Biomass Shovel", 24656).getInt();
        ItemHSPickaxeBiomassID = var2.get("Blood System", "Equipment- Biomass Pickaxe", 24657).getInt();
        ItemHSAxeBiomassID = var2.get("Blood System", "Equipment- Biomass Axe", 24658).getInt();
        ItemHSHoeBiomassID = var2.get("Blood System", "Equipment- Biomass Hoe", 24659).getInt();
        ItemHSHelmetSoulweaveID = var2.get("Soul System", "Armor- Soulweave Hood", 24670).getInt();
        ItemHSPlateSoulweaveID = var2.get("Soul System", "Armor- Soulweave Robe", 24671).getInt();
        ItemHSLegsSoulweaveID = var2.get("Soul System", "Armor- Soulweave Pants", 24672).getInt();
        ItemHSBootsSoulweaveID = var2.get("Soul System", "Armor- Soulweave Shoes", 24673).getInt();
        ItemHSHelmetBloodweaveID = var2.get("Blood System", "Armor- Bloodweave Hood", 24674).getInt();
        ItemHSPlateBloodweaveID = var2.get("Blood System", "Armor- Bloodweave Robe", 24675).getInt();
        ItemHSLegsBloodweaveID = var2.get("Blood System", "Armor- Bloodweave Pants", 24676).getInt();
        ItemHSBootsBloodweaveID = var2.get("Blood System", "Armor- Bloodweave Shoes", 24677).getInt();
        ItemHSHelmetLivingmetalID = var2.get("Soul System", "Armor- Livingmetal Helmet", 24678).getInt();
        ItemHSPlateLivingmetalID = var2.get("Soul System", "Armor- Livingmetal Chestplate", 24679).getInt();
        ItemHSLegsLivingmetalID = var2.get("Soul System", "Armor- Livingmetal Leggings", 24680).getInt();
        ItemHSBootsLivingmetalID = var2.get("Soul System", "Armor- Livingmetal Boots", 24681).getInt();
        ItemHSHelmetBiomassID = var2.get("Blood System", "Armor- Biomass Helmet", 24682).getInt();
        ItemHSPlateBiomassID = var2.get("Blood System", "Armor- Biomass Chestplate", 24683).getInt();
        ItemHSLegsBiomassID = var2.get("Blood System", "Armor- Biomass Leggings", 24684).getInt();
        ItemHSBootsBiomassID = var2.get("Blood System", "Armor- Biomass Boots", 24685).getInt();
        ItemHSHelmetSpectralLeatherID = var2.get("General", "Armor- Spectral Leather Cap", 24694).getInt();
        ItemHSPlateSpectralLeatherID = var2.get("General", "Armor- Spectral Leather Tunic", 24695).getInt();
        ItemHSLegsSpectralLeatherID = var2.get("General", "Armor- Spectral Leather Pants", 24696).getInt();
        ItemHSBootsSpectralLeatherID = var2.get("General", "Armor- Spectral Leather Boots", 24697).getInt();
        ItemHSHelmetSpectralSoulweaveID = var2.get("Soul System", "Armor- Spectral Soulweave Hood", 24698).getInt();
        ItemHSPlateSpectralSoulweaveID = var2.get("Soul System", "Armor- Spectral Soulweave Robe", 24699).getInt();
        ItemHSLegsSpectralSoulweaveID = var2.get("Soul System", "Armor- Spectral Soulweave Pants", 24700).getInt();
        ItemHSBootsSpectralSoulweaveID = var2.get("Soul System", "Armor- Spectral Soulweave Shoes", 24701).getInt();
        ItemHSHelmetSpectralBloodweaveID = var2.get("Blood System", "Armor- Spectral Bloodweave Hood", 24702).getInt();
        ItemHSPlateSpectralBloodweaveID = var2.get("Blood System", "Armor- Spectral Bloodweave Robe", 24703).getInt();
        ItemHSLegsSpectralBloodweaveID = var2.get("Blood System", "Armor- Spectral Bloodweave Pants", 24704).getInt();
        ItemHSBootsSpectralBloodweaveID = var2.get("Blood System", "Armor- Spectral Bloodweave Shoes", 24705).getInt();
        ItemHSLunarDialID = var2.get("General", "Tool- Lunar Clock", 24706).getInt();
        BlockHSSoulAltarID = var2.get("Soul System", "Altar- Altar of Souls", 2650).getInt();
        BlockHSBloodAltarID = var2.get("Blood System", "Altar- Altar of Blood", 2651).getInt();
        BlockHSSoulCrucibleID = var2.get("Soul System", "Crucible- Soul Crucible Block", 2652).getInt();
        BlockHSBloodCrucibleID = var2.get("Blood System", "Crucible- Blood Crucible Block", 2653).getInt();
        BlockHSSoulLightID = var2.get("Soul System", "Soul Light- Soul Light Block", 2655).getInt();
        BlockHSSplashBloodID = var2.get("Blood System", "Splash Residue- Splash Blood Block", 2656).getInt();
        BlockHSSkullID = var2.get("General", "Skull- Skull Block", 2657).getInt();
        BlockHSSoulweaveClothBlockID = var2.get("Soul System", "Soulweave- Soulweave Cloth", 2658).getInt();
        BlockHSBloodweaveClothBlockID = var2.get("Blood System", "Bloodweave- Bloodweave Cloth", 2659).getInt();
        BlockHSLivingmetalBlockID = var2.get("Soul System", "Livingmetal- Livingmetal Block", 2660).getInt();
        BlockHSBiomassBlockID = var2.get("Blood System", "Biomass- Biomass Block", 2661).getInt();
        BlockHSSpectralClothBlockID = var2.get("General", "Spectral- Spectral Wool", 2663).getInt();
        BlockHSCreepBlockID = var2.get("Blood System", "Creep- Creep Block", 2670).getInt();
        BlockHSBiomassPlantID = var2.get("Blood System", "Biomass- Biomass Plant", 2671).getInt();
        ItemHSCrucibleSoulID = var2.get("Soul System", "Crucible- Soul Crucible", 24630).getInt();
        ItemHSCrucibleBloodID = var2.get("Blood System", "Crucible- Blood Crucible", 24631).getInt();
        AugmentHSSoulAttunedID = var2.get("Augment", "Attunement- Soul Attuned", 200).getInt();
        AugmentHSBloodAttunedID = var2.get("Augment", "Attunement- Blood Attuned", 201).getInt();
        AugmentHSSoulstealID = var2.get("Augment", "Melee- Soulsteal", 202).getInt();
        AugmentHSBloodlettingID = var2.get("Augment", "Melee- Bloodletting", 203).getInt();
        AugmentHSBlightID = var2.get("Augment", "Range- Blight", 204).getInt();
        AugmentHSHemorrhageID = var2.get("Augment", "Range- Hemorrhage", 205).getInt();
        AugmentHSVitalityID = var2.get("Augment", "Armor- Vitality", 206).getInt();
        AugmentHSExudeID = var2.get("Augment", "Armor- Excude", 207).getInt();
        AugmentHSAfterlifeID = var2.get("Augment", "Axe- Afterlife", 208).getInt();
        AugmentHSDecapitateID = var2.get("Augment", "Axe- Decapitate", 209).getInt();
        AugmentHSWardID = var2.get("Augment", "Shield- Ward", 210).getInt();
        AugmentHSSanguinaryID = var2.get("Augment", "Shield- Sanguinary", 211).getInt();
        HUDDrinkGaugeYOverrideID = var2.get("Overrides", "HUD Drink Count Element y_offset", 0).getInt();
        var2.save();
    }

    @Mod.Init
    public void load(FMLInitializationEvent var1)
    {
        proxy.registerRenderThings();
        NetworkRegistry.instance().registerGuiHandler(this, this.guiHandler);
        MinecraftForge.EVENT_BUS.register(new EventHookContainerClassHarkenScythe());
        int var2 = proxy.addArmor("Skull");
        int var3 = proxy.addArmor("Soulweave");
        int var4 = proxy.addArmor("Bloodweave");
        int var5 = proxy.addArmor("Livingmetal");
        int var6 = proxy.addArmor("Biomass");
        int var7 = proxy.addArmor("Spectral");
        EnumArmorMaterial var8 = EnumHelper.addArmorMaterial("Livingmetal", 15, new int[] {2, 6, 5, 2}, 20);
        EnumArmorMaterial var9 = EnumHelper.addArmorMaterial("Biomass", 10, new int[] {2, 5, 4, 1}, 20);
        EnumToolMaterial var10 = EnumHelper.addToolMaterial("Livingmetal", 2, 250, 6.0F, 2, 20);
        EnumToolMaterial var11 = EnumHelper.addToolMaterial("Biomass", 2, 150, 6.0F, 2, 20);
        EnumToolMaterial var12 = EnumHelper.addToolMaterial("SoulReaper", 2, 131, 6.0F, 2, 30);
        HSScytheWood = (new ItemHSScythe(ItemHSScytheWoodID, EnumToolMaterial.WOOD, 0)).setUnlocalizedName("HSScytheWood");
        HSScytheStone = (new ItemHSScythe(ItemHSScytheStoneID, EnumToolMaterial.STONE, 0)).setUnlocalizedName("HSScytheStone");
        HSScytheIron = (new ItemHSScythe(ItemHSScytheIronID, EnumToolMaterial.IRON, 0)).setUnlocalizedName("HSScytheIron");
        HSScytheDiamond = (new ItemHSScythe(ItemHSScytheDiamondID, EnumToolMaterial.EMERALD, 0)).setUnlocalizedName("HSScytheDiamond");
        HSScytheGold = (new ItemHSScythe(ItemHSScytheGoldID, EnumToolMaterial.GOLD, 0)).setUnlocalizedName("HSScytheGold");
        HSScytheLivingmetal = (new ItemHSScythe(ItemHSScytheLivingmetalID, var10, 0)).setUnlocalizedName("HSScytheLivingmetal");
        HSScytheBiomass = (new ItemHSScythe(ItemHSScytheBiomassID, var11, 0)).setUnlocalizedName("HSScytheBiomass");
        HSScytheSoulReaper = (new ItemHSScythe(ItemHSScytheSoulReaperID, var12, 1)).setUnlocalizedName("HSScytheSoulReaper");
        HSGlaiveWood = (new ItemHSGlaive(ItemHSGlaiveWoodID, EnumToolMaterial.WOOD, 0, 0)).setUnlocalizedName("HSGlaiveWood");
        HSGlaiveStone = (new ItemHSGlaive(ItemHSGlaiveStoneID, EnumToolMaterial.STONE, 0, 1)).setUnlocalizedName("HSGlaiveStone");
        HSGlaiveIron = (new ItemHSGlaive(ItemHSGlaiveIronID, EnumToolMaterial.IRON, 0, 2)).setUnlocalizedName("HSGlaiveIron");
        HSGlaiveDiamond = (new ItemHSGlaive(ItemHSGlaiveDiamondID, EnumToolMaterial.EMERALD, 0, 3)).setUnlocalizedName("HSGlaiveDiamond");
        HSGlaiveGold = (new ItemHSGlaive(ItemHSGlaiveGoldID, EnumToolMaterial.GOLD, 0, 1)).setUnlocalizedName("HSGlaiveGold");
        HSGlaiveLivingmetal = (new ItemHSGlaive(ItemHSGlaiveLivingmetalID, var10, 0, 2)).setUnlocalizedName("HSGlaiveLivingmetal");
        HSGlaiveBiomass = (new ItemHSGlaive(ItemHSGlaiveBiomassID, var11, 0, 2)).setUnlocalizedName("HSGlaiveBiomass");
        HSEssenceKeeper = (new ItemHSKeeper(ItemHSEssenceKeeperID, 0, "Empty")).setUnlocalizedName("HSEssenceKeeper");
        HSSoulkeeper = (new ItemHSKeeper(ItemHSSoulkeeperID, 1, "Souls")).setUnlocalizedName("HSSoulkeeper");
        HSBloodkeeper = (new ItemHSKeeper(ItemHSBloodkeeperID, 2, "Blood")).setUnlocalizedName("HSBloodkeeper");
        HSEssenceVessel = (new ItemHSKeeper(ItemHSEssenceVesselID, 3, "Empty")).setUnlocalizedName("HSEssenceVessel");
        HSSoulVessel = (new ItemHSKeeper(ItemHSSoulVesselID, 4, "Souls")).setUnlocalizedName("HSSoulVessel");
        HSBloodVessel = (new ItemHSKeeper(ItemHSBloodVesselID, 5, "Blood")).setUnlocalizedName("HSBloodVessel");
        HSBookShadow = (new ItemHSBook(ItemHSBookShadowID, 0)).setUnlocalizedName("HSBookShadow");
        HSBookCarnage = (new ItemHSBook(ItemHSBookCarnageID, 1)).setUnlocalizedName("HSBookCarnage");
        HSBookNecronomicon = (new ItemHSBook(ItemHSBookNecronomiconID, 2)).setUnlocalizedName("HSBookNecronomicon");
        HSNecronomiconPage = (new ItemHSBook(ItemHSNecronomiconPageID, 3)).setUnlocalizedName("HSBookNecronomiconPage");
        HSSkull = (new ItemHSSkull(ItemHSSkullID, EnumArmorMaterial.GOLD, var2, 0, 0)).setUnlocalizedName("HSSkull");
        HSTalisman = (new ItemHSTalisman(ItemHSTalismanID, 0)).setUnlocalizedName("HSTalisman");
        HSTalismanEthereal = (new ItemHSTalisman(ItemHSTalismanEtherealID, 1)).setUnlocalizedName("HSTalismanEthereal");
        HSAmuletOverworld = (new ItemHSAmulet(ItemHSAmuletOverworldID, 0)).setUnlocalizedName("HSAmuletOverworld");
        HSAmuletNether = (new ItemHSAmulet(ItemHSAmuletNetherID, 1)).setUnlocalizedName("HSAmuletNether");
        HSAmuletEthereal = (new ItemHSAmulet(ItemHSAmuletEtherealID, 2)).setUnlocalizedName("HSAmuletEthereal");
        HSIngotLivingmetal = (new ItemHSIngot(ItemHSIngotLivingmetalID, 0)).setUnlocalizedName("HSIngotLivingmetal");
        HSBiomass = (new ItemHSIngot(ItemHSBiomassID, 1)).setUnlocalizedName("HSBiomass");
        HSEctoplasm = (new ItemHSIngot(ItemHSEctoplasmID, 2)).setUnlocalizedName("HSEctoplasm");
        HSAbyssFragment = (new ItemHSIngot(ItemHSAbyssFragmentID, 3)).setUnlocalizedName("HSAbyssFragment");
        HSDyeSpectral = (new ItemHSDye(ItemHSDyeSpectralID, 0)).setUnlocalizedName("HSDyeSpectral");
        HSCreepBall = (new ItemHSSeeds(ItemHSCreepBallID, 1)).setUnlocalizedName("HSCreepball");
        HSBiomassSeed = (new ItemHSSeeds(ItemHSBiomassSeedID, 0)).setUnlocalizedName("HSBiomassSeed");
        HSBiomassSeedGerminated = (new ItemHSSeeds(ItemHSBiomassSeedGerminatedID, 2)).setUnlocalizedName("HSBiomassSeedGerminated");
        HSSwordLivingmetal = (new ItemHSSword(ItemHSSwordLivingmetalID, var10, 0)).setUnlocalizedName("HSSwordLivingmetal");
        HSSpadeLivingmetal = (new ItemHSSpade(ItemHSSpadeLivingmetalID, var10, 0)).setUnlocalizedName("HSSpadeLivingmetal");
        HSPickaxeLivingmetal = (new ItemHSPickaxe(ItemHSPickaxeLivingmetalID, var10, 0)).setUnlocalizedName("HSPickaxeLivingmetal");
        HSAxeLivingmetal = (new ItemHSAxe(ItemHSAxeLivingmetalID, var10, 0)).setUnlocalizedName("HSAxeLivingmetal");
        HSHoeLivingmetal = (new ItemHSHoe(ItemHSHoeLivingmetalID, var10, 0)).setUnlocalizedName("HSHoeLivingmetal");
        HSSwordBiomass = (new ItemHSSword(ItemHSSwordBiomassID, var11, 0)).setUnlocalizedName("HSSwordBiomass");
        HSSpadeBiomass = (new ItemHSSpade(ItemHSSpadeBiomassID, var11, 0)).setUnlocalizedName("HSSpadeBiomass");
        HSPickaxeBiomass = (new ItemHSPickaxe(ItemHSPickaxeBiomassID, var11, 0)).setUnlocalizedName("HSPickaxeBiomass");
        HSAxeBiomass = (new ItemHSAxe(ItemHSAxeBiomassID, var11, 0)).setUnlocalizedName("HSAxeBiomass");
        HSHoeBiomass = (new ItemHSHoe(ItemHSHoeBiomassID, var11, 0)).setUnlocalizedName("HSHoeBiomass");
        HSHelmetSoulweave = (new ItemHSSoulweaveArmor(ItemHSHelmetSoulweaveID, EnumArmorMaterial.CLOTH, var3, 0)).setUnlocalizedName("HSHelmetSoulweave");
        HSPlateSoulweave = (new ItemHSSoulweaveArmor(ItemHSPlateSoulweaveID, EnumArmorMaterial.CLOTH, var3, 1)).setUnlocalizedName("HSChestplateSoulweave");
        HSLegsSoulweave = (new ItemHSSoulweaveArmor(ItemHSLegsSoulweaveID, EnumArmorMaterial.CLOTH, var3, 2)).setUnlocalizedName("HSLeggingsSoulweave");
        HSBootsSoulweave = (new ItemHSSoulweaveArmor(ItemHSBootsSoulweaveID, EnumArmorMaterial.CLOTH, var3, 3)).setUnlocalizedName("HSBootsSoulweave");
        HSHelmetBloodweave = (new ItemHSBloodweaveArmor(ItemHSHelmetBloodweaveID, EnumArmorMaterial.CLOTH, var4, 0)).setUnlocalizedName("HSHelmetBloodweave");
        HSPlateBloodweave = (new ItemHSBloodweaveArmor(ItemHSPlateBloodweaveID, EnumArmorMaterial.CLOTH, var4, 1)).setUnlocalizedName("HSChestplateBloodweave");
        HSLegsBloodweave = (new ItemHSBloodweaveArmor(ItemHSLegsBloodweaveID, EnumArmorMaterial.CLOTH, var4, 2)).setUnlocalizedName("HSLeggingsBloodweave");
        HSBootsBloodweave = (new ItemHSBloodweaveArmor(ItemHSBootsBloodweaveID, EnumArmorMaterial.CLOTH, var4, 3)).setUnlocalizedName("HSBootsBloodweave");
        HSHelmetLivingmetal = (new ItemHSArmor(ItemHSHelmetLivingmetalID, var8, var5, 0)).setUnlocalizedName("HSHelmetLivingmetal");
        HSPlateLivingmetal = (new ItemHSArmor(ItemHSPlateLivingmetalID, var8, var5, 1)).setUnlocalizedName("HSChestplateLivingmetal");
        HSLegsLivingmetal = (new ItemHSArmor(ItemHSLegsLivingmetalID, var8, var5, 2)).setUnlocalizedName("HSLeggingsLivingmetal");
        HSBootsLivingmetal = (new ItemHSArmor(ItemHSBootsLivingmetalID, var8, var5, 3)).setUnlocalizedName("HSBootsLivingmetal");
        HSHelmetBiomass = (new ItemHSArmor(ItemHSHelmetBiomassID, var9, var6, 0)).setUnlocalizedName("HSHelmetBiomass");
        HSPlateBiomass = (new ItemHSArmor(ItemHSPlateBiomassID, var9, var6, 1)).setUnlocalizedName("HSChestplateBiomass");
        HSLegsBiomass = (new ItemHSArmor(ItemHSLegsBiomassID, var9, var6, 2)).setUnlocalizedName("HSLeggingsBiomass");
        HSBootsBiomass = (new ItemHSArmor(ItemHSBootsBiomassID, var9, var6, 3)).setUnlocalizedName("HSBootsBiomass");
        HSHelmetSpectralLeather = (new ItemHSSpectralArmor(ItemHSHelmetSpectralLeatherID, EnumArmorMaterial.CHAIN, var7, 0, 0)).setUnlocalizedName("HSHelmetSpectralLeather");
        HSPlateSpectralLeather = (new ItemHSSpectralArmor(ItemHSPlateSpectralLeatherID, EnumArmorMaterial.CHAIN, var7, 1, 0)).setUnlocalizedName("HSChestplateSpectralLeather");
        HSLegsSpectralLeather = (new ItemHSSpectralArmor(ItemHSLegsSpectralLeatherID, EnumArmorMaterial.CHAIN, var7, 2, 0)).setUnlocalizedName("HSLeggingsSpectralLeather");
        HSBootsSpectralLeather = (new ItemHSSpectralArmor(ItemHSBootsSpectralLeatherID, EnumArmorMaterial.CHAIN, var7, 3, 0)).setUnlocalizedName("HSBootsSpectralLeather");
        HSHelmetSpectralSoulweave = (new ItemHSSpectralArmor(ItemHSHelmetSpectralSoulweaveID, EnumArmorMaterial.CHAIN, var7, 0, 1)).setUnlocalizedName("HSHelmetSpectralSoulweave");
        HSPlateSpectralSoulweave = (new ItemHSSpectralArmor(ItemHSPlateSpectralSoulweaveID, EnumArmorMaterial.CHAIN, var7, 1, 1)).setUnlocalizedName("HSChestplateSpectralSoulweave");
        HSLegsSpectralSoulweave = (new ItemHSSpectralArmor(ItemHSLegsSpectralSoulweaveID, EnumArmorMaterial.CHAIN, var7, 2, 1)).setUnlocalizedName("HSLeggingsSpectralSoulweave");
        HSBootsSpectralSoulweave = (new ItemHSSpectralArmor(ItemHSBootsSpectralSoulweaveID, EnumArmorMaterial.CHAIN, var7, 3, 1)).setUnlocalizedName("HSBootsSpectralSoulweave");
        HSHelmetSpectralBloodweave = (new ItemHSSpectralArmor(ItemHSHelmetSpectralBloodweaveID, EnumArmorMaterial.CHAIN, var7, 0, 2)).setUnlocalizedName("HSHelmetSpectralBloodweave");
        HSPlateSpectralBloodweave = (new ItemHSSpectralArmor(ItemHSPlateSpectralBloodweaveID, EnumArmorMaterial.CHAIN, var7, 1, 2)).setUnlocalizedName("HSChestplateSpectralBloodweave");
        HSLegsSpectralBloodweave = (new ItemHSSpectralArmor(ItemHSLegsSpectralBloodweaveID, EnumArmorMaterial.CHAIN, var7, 2, 2)).setUnlocalizedName("HSLeggingsSpectralBloodweave");
        HSBootsSpectralBloodweave = (new ItemHSSpectralArmor(ItemHSBootsSpectralBloodweaveID, EnumArmorMaterial.CHAIN, var7, 3, 2)).setUnlocalizedName("HSBootsSpectralBloodweave");
        HSLunarDial = (new ItemHSLunarDial(ItemHSLunarDialID)).setUnlocalizedName("HSLunarDial");
        HSSoulAltar = (new BlockHSSoulAltar(BlockHSSoulAltarID)).setHardness(5.0F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setUnlocalizedName("HSSoulAltar");
        HSBloodAltar = (new BlockHSBloodAltar(BlockHSBloodAltarID)).setHardness(5.0F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setUnlocalizedName("HSBloodAltar");
        HSSoulCrucible = (new BlockHSSoulCrucible(BlockHSSoulCrucibleID, HSCrucibleRenderID)).setHardness(2.0F).setUnlocalizedName("HSSoulCrucible");
        HSBloodCrucible = (new BlockHSBloodCrucible(BlockHSBloodCrucibleID, HSCrucibleRenderID)).setHardness(2.0F).setUnlocalizedName("HSBloodCrucible");
        HSSoulLight = (new BlockHSSoulLight(BlockHSSoulLightID, 0)).setHardness(0.05F).setStepSound(Block.soundPowderFootstep).setUnlocalizedName("HSSoulLight");
        HSSplashBloodBlock = (new BlockHSBloodSplash(BlockHSSplashBloodID, 0)).setHardness(0.05F).setStepSound(Block.soundPowderFootstep).setUnlocalizedName("HSSplashBloodBlock");
        HSSkullBlock = (new BlockHSSkull(BlockHSSkullID)).setHardness(1.0F).setStepSound(Block.soundStoneFootstep).setUnlocalizedName("HSSkullBlock");
        HSSoulweaveClothBlock = (new BlockHSCloth(BlockHSSoulweaveClothBlockID, 0)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setUnlocalizedName("HSSoulweaveClothBlock");
        HSBloodweaveClothBlock = (new BlockHSCloth(BlockHSBloodweaveClothBlockID, 1)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setUnlocalizedName("HSBloodweaveClothBlock");
        HSLivingmetalBlock = (new BlockHSLivingmetal(BlockHSLivingmetalBlockID)).setHardness(5.0F).setResistance(10.0F).setStepSound(Block.soundMetalFootstep).setUnlocalizedName("HSLivingmetalBlock");
        HSBiomassBlock = (new BlockHSBiomass(BlockHSBiomassBlockID)).setHardness(5.0F).setResistance(5.0F).setStepSound(Block.soundPowderFootstep).setUnlocalizedName("HSBiomassBlock");
        HSSpectralClothBlock = (new BlockHSCloth(BlockHSSpectralClothBlockID, 2)).setHardness(0.8F).setStepSound(Block.soundClothFootstep).setUnlocalizedName("HSSpectralClothBlock");
        HSCreepBlock = (new BlockHSCreep(BlockHSCreepBlockID)).setHardness(0.6F).setStepSound(Block.soundGrassFootstep).setUnlocalizedName("HSCreepBlock");
        HSBiomassPlant = (new BlockHSCrops(BlockHSBiomassPlantID, Material.plants, 1, HSBiomassSeed.itemID, HSCreepBlock, 1, 2, 0)).setHardness(0.0F).setStepSound(Block.soundGrassFootstep).setUnlocalizedName("HSBiomassPlant");
        HSCrucibleSoul = (new ItemHSCrucible(ItemHSCrucibleSoulID, HSSoulCrucible)).setUnlocalizedName("HSCrucibleSoul");
        HSCrucibleBlood = (new ItemHSCrucible(ItemHSCrucibleBloodID, HSBloodCrucible)).setUnlocalizedName("HSCrucibleBlood");
        HSSoulAttunedAug = new EnchantmentHSSoulAttuned(AugmentHSSoulAttunedID, 1);
        HSBloodAttunedAug = new EnchantmentHSBloodAttuned(AugmentHSBloodAttunedID, 1);
        HSSoulstealAug = new EnchantmentHSSoulsteal(AugmentHSSoulstealID, 1);
        HSBloodlettingAug = new EnchantmentHSBloodletting(AugmentHSBloodlettingID, 1);
        HSBlightAug = new EnchantmentHSBlight(AugmentHSBlightID, 1);
        HSHemorrhageAug = new EnchantmentHSHemorrhage(AugmentHSHemorrhageID, 1);
        HSVitalityAug = new EnchantmentHSVitality(AugmentHSVitalityID, 1);
        HSExudeAug = new EnchantmentHSExude(AugmentHSExudeID, 1);
        HSAfterlifeAug = new EnchantmentHSAfterlife(AugmentHSAfterlifeID, 1);
        HSDecapitateAug = new EnchantmentHSDecapitate(AugmentHSDecapitateID, 1);
        HSWardAug = new EnchantmentHSWard(AugmentHSWardID, 1);
        HSSanguinaryAug = new EnchantmentHSSanguinary(AugmentHSSanguinaryID, 1);
        LanguageRegistry.addName(HSScytheWood, "Wooden Scythe");
        LanguageRegistry.addName(HSScytheStone, "Stone Scythe");
        LanguageRegistry.addName(HSScytheIron, "Iron Scythe");
        LanguageRegistry.addName(HSScytheDiamond, "Diamond Scythe");
        LanguageRegistry.addName(HSScytheGold, "Golden Scythe");
        LanguageRegistry.addName(HSScytheLivingmetal, "Livingmetal Scythe");
        LanguageRegistry.addName(HSScytheBiomass, "Biomass Scythe");
        LanguageRegistry.addName(HSScytheSoulReaper, "Soul Reaper");
        LanguageRegistry.addName(HSGlaiveWood, "Wooden Glaive");
        LanguageRegistry.addName(HSGlaiveStone, "Stone Glaive");
        LanguageRegistry.addName(HSGlaiveIron, "Iron Glaive");
        LanguageRegistry.addName(HSGlaiveDiamond, "Diamond Glaive");
        LanguageRegistry.addName(HSGlaiveGold, "Golden Glaive");
        LanguageRegistry.addName(HSGlaiveLivingmetal, "Livingmetal Glaive");
        LanguageRegistry.addName(HSGlaiveBiomass, "Biomass Glaive");
        LanguageRegistry.addName(HSEssenceKeeper, "Essence Keeper");
        LanguageRegistry.addName(HSSoulkeeper, "Soulkeeper");
        LanguageRegistry.addName(HSBloodkeeper, "Bloodkeeper");
        LanguageRegistry.addName(HSEssenceVessel, "Essence Vessel");
        LanguageRegistry.addName(HSSoulVessel, "Soul Vessel");
        LanguageRegistry.addName(HSBloodVessel, "Blood Vessel");
        LanguageRegistry.addName(HSBookShadow, "Book of Shadows");
        LanguageRegistry.addName(HSBookCarnage, "Book of Carnage");
        LanguageRegistry.addName(HSBookNecronomicon, "Necronomicon");
        LanguageRegistry.addName(HSNecronomiconPage, "Necronomicon Page");
        LanguageRegistry.addName(HSSkull, "Skull");
        LanguageRegistry.addName(HSTalisman, "Talisman");
        LanguageRegistry.addName(HSTalismanEthereal, "Ethereal Talisman");
        LanguageRegistry.addName(HSAmuletOverworld, "Overworld Amulet");
        LanguageRegistry.addName(HSAmuletNether, "Nether Amulet");
        LanguageRegistry.addName(HSAmuletEthereal, "Ethereal Amulet");
        LanguageRegistry.addName(HSIngotLivingmetal, "Livingmetal Ingot");
        LanguageRegistry.addName(HSBiomass, "Biomass");
        LanguageRegistry.addName(HSEctoplasm, "Ectoplasm");
        LanguageRegistry.addName(HSAbyssFragment, "Abyss Fragment");
        LanguageRegistry.addName(HSDyeSpectral, "Spectral Dye");
        LanguageRegistry.addName(HSCreepBall, "Creepball");
        LanguageRegistry.addName(HSBiomassSeed, "Biomass Seed");
        LanguageRegistry.addName(HSBiomassSeedGerminated, "Germinated Biomass Seed");
        LanguageRegistry.addName(HSSwordLivingmetal, "Livingmetal Sword");
        LanguageRegistry.addName(HSSpadeLivingmetal, "Livingmetal Shovel");
        LanguageRegistry.addName(HSPickaxeLivingmetal, "Livingmetal Pickaxe");
        LanguageRegistry.addName(HSAxeLivingmetal, "Livingmetal Axe");
        LanguageRegistry.addName(HSHoeLivingmetal, "Livingmetal Hoe");
        LanguageRegistry.addName(HSSwordBiomass, "Biomass Sword");
        LanguageRegistry.addName(HSSpadeBiomass, "Biomass Shovel");
        LanguageRegistry.addName(HSPickaxeBiomass, "Biomass Pickaxe");
        LanguageRegistry.addName(HSAxeBiomass, "Biomass Axe");
        LanguageRegistry.addName(HSHoeBiomass, "Biomass Hoe");
        LanguageRegistry.addName(HSHelmetSoulweave, "Soulweave Hood");
        LanguageRegistry.addName(HSPlateSoulweave, "Soulweave Robe");
        LanguageRegistry.addName(HSLegsSoulweave, "Soulweave Pants");
        LanguageRegistry.addName(HSBootsSoulweave, "Soulweave Shoes");
        LanguageRegistry.addName(HSHelmetBloodweave, "Bloodweave Hood");
        LanguageRegistry.addName(HSPlateBloodweave, "Bloodweave Robe");
        LanguageRegistry.addName(HSLegsBloodweave, "Bloodweave Pants");
        LanguageRegistry.addName(HSBootsBloodweave, "Bloodweave Shoes");
        LanguageRegistry.addName(HSHelmetLivingmetal, "Livingmetal Helmet");
        LanguageRegistry.addName(HSPlateLivingmetal, "Livingmetal Chestplate");
        LanguageRegistry.addName(HSLegsLivingmetal, "Livingmetal Leggings");
        LanguageRegistry.addName(HSBootsLivingmetal, "Livingmetal Boots");
        LanguageRegistry.addName(HSHelmetBiomass, "Biomass Helmet");
        LanguageRegistry.addName(HSPlateBiomass, "Biomass Chestplate");
        LanguageRegistry.addName(HSLegsBiomass, "Biomass Leggings");
        LanguageRegistry.addName(HSBootsBiomass, "Biomass Boots");
        LanguageRegistry.addName(HSHelmetSpectralLeather, "Leather Cap");
        LanguageRegistry.addName(HSPlateSpectralLeather, "Leather Tunic");
        LanguageRegistry.addName(HSLegsSpectralLeather, "Leather Pants");
        LanguageRegistry.addName(HSBootsSpectralLeather, "Leather Shoes");
        LanguageRegistry.addName(HSHelmetSpectralSoulweave, "Soulweave Hood");
        LanguageRegistry.addName(HSPlateSpectralSoulweave, "Soulweave Robe");
        LanguageRegistry.addName(HSLegsSpectralSoulweave, "Soulweave Pants");
        LanguageRegistry.addName(HSBootsSpectralSoulweave, "Soulweave Shoes");
        LanguageRegistry.addName(HSHelmetSpectralBloodweave, "Bloodweave Hood");
        LanguageRegistry.addName(HSPlateSpectralBloodweave, "Bloodweave Robe");
        LanguageRegistry.addName(HSLegsSpectralBloodweave, "Bloodweave Pants");
        LanguageRegistry.addName(HSBootsSpectralBloodweave, "Bloodweave Shoes");
        LanguageRegistry.addName(HSLunarDial, "Lunar Clock");
        LanguageRegistry.addName(HSSoulAltar, "Altar of Souls");
        LanguageRegistry.addName(HSBloodAltar, "Altar of Blood");
        LanguageRegistry.addName(HSSoulCrucible, "Soul Crucible");
        LanguageRegistry.addName(HSBloodCrucible, "Blood Crucible");
        LanguageRegistry.addName(HSSoulLight, "Soul Light");
        LanguageRegistry.addName(HSSplashBloodBlock, "Blood Splash Residue");
        LanguageRegistry.addName(HSSkullBlock, "Skull");
        LanguageRegistry.addName(HSSoulweaveClothBlock, "Soulweave Cloth");
        LanguageRegistry.addName(HSBloodweaveClothBlock, "Bloodweave Cloth");
        LanguageRegistry.addName(HSLivingmetalBlock, "Livingmetal Block");
        LanguageRegistry.addName(HSBiomassBlock, "Biomass Block");
        LanguageRegistry.addName(HSCreepBlock, "Creep Block");
        LanguageRegistry.addName(HSBiomassPlant, "Biomass Plant");
        LanguageRegistry.addName(HSSpectralClothBlock, "Spectral Wool");
        LanguageRegistry.addName(HSCrucibleSoul, "Soul Crucible");
        LanguageRegistry.addName(HSCrucibleBlood, "Blood Crucible");
        GameRegistry.registerBlock(HSSoulAltar);
        GameRegistry.registerBlock(HSBloodAltar);
        GameRegistry.registerBlock(HSSoulCrucible);
        GameRegistry.registerBlock(HSBloodCrucible);
        GameRegistry.registerBlock(HSSoulLight);
        GameRegistry.registerBlock(HSSplashBloodBlock);
        GameRegistry.registerBlock(HSSkullBlock);
        GameRegistry.registerBlock(HSSoulweaveClothBlock);
        GameRegistry.registerBlock(HSBloodweaveClothBlock);
        GameRegistry.registerBlock(HSLivingmetalBlock);
        GameRegistry.registerBlock(HSBiomassBlock);
        GameRegistry.registerBlock(HSCreepBlock);
        GameRegistry.registerBlock(HSBiomassPlant);
        GameRegistry.registerBlock(HSSpectralClothBlock);
        this.setCustomDungeonLoots();
        this.registerTradeHandlers();
        GameRegistry.registerTileEntity(TileEntityHSSoulAltar.class, "tileEntityHSSoulAltar");
        GameRegistry.registerTileEntity(TileEntityHSBloodAltar.class, "tileEntityHSBloodAltar");
        GameRegistry.registerTileEntity(TileEntityHSSkull.class, "tileEntityHSSkull");
        OreDictionary.registerOre("ingotLivingMetal", new ItemStack(HSIngotLivingmetal));
        var8.customCraftingMaterial = HSIngotLivingmetal;
        var10.customCraftingMaterial = HSIngotLivingmetal;
        var9.customCraftingMaterial = HSBiomass;
        var11.customCraftingMaterial = HSBiomass;
        var12.customCraftingMaterial = Item.bone;
        proxy.registerRenderInformation();
        EntityRegistry.registerModEntity(EntityHSSoul.class, "SoulCommon", 1, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSoulGrieving.class, "SoulGrieving", 2, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSoulCulled.class, "SoulCulled", 3, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSoulWrathful.class, "SoulWrathful", 4, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSoulLost.class, "SoulLost", 5, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSlimeSoul.class, "Ectoplasm", 10, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSlimeBlood.class, "Hemoglobin", 11, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSHarbinger.class, "Harbinger", 12, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralMinerEvil.class, "SpectralMinerEvil", 13, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralChicken.class, "SpectralChicken", 20, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralCow.class, "SpectralCow", 21, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSheep.class, "SpectralSheep", 22, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralBat.class, "SpectralBat", 23, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralPig.class, "SpectralPig", 24, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralWolf.class, "SpectralWolf", 25, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralOcelot.class, "SpectralOcelot", 26, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSquid.class, "SpectralSquid", 27, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralVillager.class, "SpectralVillager", 28, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralCreeper.class, "SpectralCreeper", 29, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralZombie.class, "SpectralZombie", 30, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralPigZombie.class, "SpectralPigZombie", 31, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSkeleton.class, "SpectralSkeleton", 32, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSkeletonWither.class, "SpectralSkeletonWither", 33, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralWitch.class, "SpectralWitch", 34, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSpider.class, "SpectralSpider", 35, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralCaveSpider.class, "SpectralCaveSpider", 36, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralSilverfish.class, "SpectralSilverfish", 37, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralEnderman.class, "SpectralEnderman", 38, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralBlaze.class, "SpectralBlaze", 39, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralGhast.class, "SpectralGhast", 40, this, 80, 3, true);
        EntityRegistry.registerModEntity(EntityHSSpectralMiner.class, "SpectralMiner", 42, this, 80, 3, true);
        EntityRegistry.addSpawn(EntityHSHarbinger.class, 1, 0, 1, EnumCreatureType.monster, new BiomeGenBase[] {BiomeGenBase.beach, BiomeGenBase.extremeHills, BiomeGenBase.extremeHillsEdge, BiomeGenBase.forest, BiomeGenBase.forestHills, BiomeGenBase.jungle, BiomeGenBase.jungleHills, BiomeGenBase.mushroomIsland, BiomeGenBase.mushroomIslandShore, BiomeGenBase.ocean, BiomeGenBase.plains, BiomeGenBase.river, BiomeGenBase.swampland});
        EntityRegistry.addSpawn(EntityHSSoulLost.class, 3, 0, 1, EnumCreatureType.monster, new BiomeGenBase[] {BiomeGenBase.beach, BiomeGenBase.extremeHills, BiomeGenBase.extremeHillsEdge, BiomeGenBase.forest, BiomeGenBase.forestHills, BiomeGenBase.jungle, BiomeGenBase.jungleHills, BiomeGenBase.mushroomIsland, BiomeGenBase.mushroomIslandShore, BiomeGenBase.ocean, BiomeGenBase.plains, BiomeGenBase.river, BiomeGenBase.swampland});
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SoulCommon.name", "Soul Common");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SoulGrieving.name", "Soul Grieving");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SoulCulled.name", "Soul Culled");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SoulWrathful.name", "Soul Wrathful");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SoulLost.name", "Soul Lost");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.Ectoplasm.name", "Ectoplasm");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.Hemoglobin.name", "Hemoglobin");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.Harbinger.name", "Harbinger");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralMinerEvil.name", "Spectral Miner");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralChicken.name", "Spectral Chicken");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralCow.name", "Spectral Cow");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSheep.name", "Spectral Sheep");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralBat.name", "Spectral Bat");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralPig.name", "Spectral Pig");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralWolf.name", "Spectral Wolf");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralOcelot.name", "Spectral Ocelot");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSquid.name", "Spectral Squid");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralVillager.name", "Spectral Villager");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralCreeper.name", "Spectral Creeper");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralZombie.name", "Spectral Zombie");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralPigZombie.name", "Spectral Pig Zombie");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSkeleton.name", "Spectral Skeleton");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSkeletonWither.name", "Spectral Wither Skeleton");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralWitch.name", "Spectral Witch");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSpider.name", "Spectral Spider");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralCaveSpider.name", "Spectral Cave Spider");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralSilverfish.name", "Spectral Silverfish");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralEnderman.name", "Spectral Enderman");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralBlaze.name", "Spectral Blaze");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralGhast.name", "Spectral Ghast");
        LanguageRegistry.instance().addStringLocalization("entity.HarkenScythe_Core.SpectralMiner.name", "Spectral Miner");
        registerEntityEgg(EntityHSSlimeSoul.class, 16777215, 0);
        registerEntityEgg(EntityHSSlimeBlood.class, 16777215, 0);
        registerEntityEgg(EntityHSHarbinger.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralMinerEvil.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralChicken.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralCow.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSheep.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralBat.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralPig.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralWolf.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralOcelot.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSquid.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralVillager.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralCreeper.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralZombie.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralPigZombie.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSkeleton.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSkeletonWither.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralWitch.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSpider.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralCaveSpider.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralSilverfish.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralEnderman.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralBlaze.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralGhast.class, 16777215, 0);
        registerEntityEgg(EntityHSSpectralMiner.class, 16777215, 0);
        GameRegistry.addRecipe(new ItemStack(HSScytheWood), new Object[] {"XXX", "  *", " * ", 'X', Block.planks, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheStone, 1), new Object[] {"XXX", "  *", " * ", 'X', Block.cobblestone, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheIron, 1), new Object[] {"XXX", "  *", " * ", 'X', Item.ingotIron, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheDiamond, 1), new Object[] {"XXX", "  *", " * ", 'X', Item.diamond, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheGold, 1), new Object[] {"XXX", "  *", " * ", 'X', Item.ingotGold, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheLivingmetal, 1), new Object[] {"XXX", "  *", " * ", 'X', HSIngotLivingmetal, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSScytheBiomass, 1), new Object[] {"XXX", "  *", " * ", 'X', HSBiomass, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveWood), new Object[] {" XX", "X*X", "*X ", 'X', Block.planks, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveStone), new Object[] {" XX", "X*X", "*X ", 'X', Block.cobblestone, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveIron), new Object[] {" XX", "X*X", "*X ", 'X', Item.ingotIron, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveDiamond), new Object[] {" XX", "X*X", "*X ", 'X', Item.diamond, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveGold), new Object[] {" XX", "X*X", "*X ", 'X', Item.ingotGold, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveLivingmetal), new Object[] {" XX", "X*X", "*X ", 'X', HSIngotLivingmetal, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSGlaiveBiomass), new Object[] {" XX", "X*X", "*X ", 'X', HSBiomass, '*', Item.stick});
        GameRegistry.addRecipe(new ItemStack(HSEssenceKeeper, 1), new Object[] {"X X", " X ", 'X', Item.enderPearl});
        GameRegistry.addShapelessRecipe(new ItemStack(HSBookShadow), new Object[] {new ItemStack(Item.book), new ItemStack(Item.feather), new ItemStack(Item.ingotGold), new ItemStack(HSSoulkeeper)});
        GameRegistry.addShapelessRecipe(new ItemStack(HSBookCarnage), new Object[] {new ItemStack(Item.book), new ItemStack(Item.feather), new ItemStack(Item.ingotGold), new ItemStack(HSBloodkeeper)});
        GameRegistry.addRecipe(new ItemStack(HSBookNecronomicon, 1), new Object[] {"XXX", "**X", "**X", 'X', HSNecronomiconPage, '*', Item.rottenFlesh});
        GameRegistry.addRecipe(new ItemStack(HSTalisman, 1), new Object[] {"X X", " ^ ", " * ", 'X', Item.silk, '^', Item.enderPearl, '*', Item.diamond});
        GameRegistry.addRecipe(new ItemStack(HSTalismanEthereal, 1), new Object[] {"X X", " ^ ", " * ", 'X', Item.silk, '^', Item.enderPearl, '*', Item.netherStar});
        GameRegistry.addRecipe(new ItemStack(HSAmuletOverworld, 1), new Object[] {"X X", "*^*", " * ", 'X', Item.silk, '*', Item.clay, '^', Item.enderPearl});
        GameRegistry.addRecipe(new ItemStack(HSAmuletNether, 1), new Object[] {"X X", "*^*", " * ", 'X', Item.silk, '*', Item.fireballCharge, '^', Item.enderPearl});
        GameRegistry.addRecipe(new ItemStack(HSAmuletEthereal, 1), new Object[] {"X X", "*^*", " * ", 'X', Item.silk, '*', Item.netherStar, '^', Item.enderPearl});
        GameRegistry.addShapelessRecipe(new ItemStack(HSIngotLivingmetal, 9), new Object[] {new ItemStack(HSLivingmetalBlock)});
        GameRegistry.addShapelessRecipe(new ItemStack(HSBiomass, 9), new Object[] {new ItemStack(HSBiomassBlock)});
        GameRegistry.addRecipe(new ItemStack(Item.enderPearl, 1), new Object[] {"XX", "XX", 'X', HSAbyssFragment});
        GameRegistry.addRecipe(new ItemStack(HSCreepBall, 1), new Object[] {"X*X", "*^*", "X*X", 'X', Item.rottenFlesh, '*', Item.spiderEye, '^', Item.slimeBall});
        GameRegistry.addRecipe(new ItemStack(HSCreepBall, 1), new Object[] {"X*X", "*^*", "X*X", 'X', Item.spiderEye, '*', Item.rottenFlesh, '^', Item.slimeBall});
        GameRegistry.addShapelessRecipe(new ItemStack(HSDyeSpectral, 2), new Object[] {new ItemStack(HSEctoplasm), new ItemStack(Item.dyePowder, 1, 15)});
        GameRegistry.addShapelessRecipe(new ItemStack(HSBiomassSeed), new Object[] {new ItemStack(Item.fermentedSpiderEye), new ItemStack(Item.netherStalkSeeds)});
        GameRegistry.addRecipe(new ItemStack(HSLunarDial, 1), new Object[] {"X*X", "*^*", "X*X", 'X', HSEctoplasm, '*', Item.ingotGold, '^', Item.redstone});
        GameRegistry.addRecipe(new ItemStack(HSSoulAltar, 1), new Object[] {" ^ ", "*X*", "XXX", 'X', Block.obsidian, '*', Item.enderPearl, '^', HSBookShadow});
        GameRegistry.addRecipe(new ItemStack(HSBloodAltar, 1), new Object[] {" ^ ", "*X*", "XXX", 'X', Block.netherrack, '*', Item.enderPearl, '^', HSBookCarnage});
        GameRegistry.addRecipe(new ItemStack(HSCrucibleSoul, 1), new Object[] {"X X", "X*X", "XXX", 'X', Block.obsidian, '*', Item.enderPearl});
        GameRegistry.addRecipe(new ItemStack(HSCrucibleBlood, 1), new Object[] {"X X", "X*X", "XXX", 'X', Block.netherrack, '*', Item.enderPearl});
        GameRegistry.addRecipe(new ItemStack(HSLivingmetalBlock, 1), new Object[] {"XXX", "XXX", "XXX", 'X', HSIngotLivingmetal});
        GameRegistry.addRecipe(new ItemStack(HSBiomassBlock, 1), new Object[] {"XXX", "XXX", "XXX", 'X', HSBiomass});
        GameRegistry.addShapelessRecipe(new ItemStack(HSSpectralClothBlock, 1), new Object[] {new ItemStack(HSDyeSpectral), new ItemStack(Block.cloth)});
        RecipeHSAttunement.setupAttunementRecipes();
        RecipeHSEquipment.setupEquipmentRecipes();
        RecipeHSArmor.setupArmorRecipes();
        GameRegistry.addRecipe(new RecipesHSArmorDye());
    }

    public void setCustomDungeonLoots()
    {
        ChestGenHooks.getInfo("bonusChest").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("villageBlacksmith").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("dungeonChest").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("mineshaftCorridor").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("pyramidDesertyChest").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("pyramidJungleChest").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("strongholdCorridor").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("strongholdCrossing").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
        ChestGenHooks.getInfo("strongholdLibrary").addItem(new WeightedRandomChestContent(new ItemStack(HSNecronomiconPage, 1), 1, 1, 5));
    }

    public void registerTradeHandlers()
    {
        VillagerRegistry var1 = VillagerRegistry.instance();
        TradeHandler var2 = new TradeHandler();
        var1.registerVillageTradeHandler(1, var2);
    }

    public static int getUniqueEntityId()
    {
        do
        {
            ++startEntityId;
        }
        while (EntityList.getStringFromID(startEntityId) != null);

        return startEntityId;
    }

    public static void registerEntityEgg(Class var0, int var1, int var2)
    {
        int var3 = getUniqueEntityId();
        EntityList.IDtoClassMapping.put(Integer.valueOf(var3), var0);
        EntityList.entityEggs.put(Integer.valueOf(var3), new EntityEggInfo(var3, var1, var2));
    }
}
